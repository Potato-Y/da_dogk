plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.github'
version = '1.0.1-RELEASE'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') // Spring Data JPA
    implementation('org.springframework.boot:spring-boot-starter-security') // 스프링 시큐리티
    implementation('org.springframework.boot:spring-boot-starter-websocket') // web socket
    implementation('io.jsonwebtoken:jjwt:0.9.1') // 자바 jwt 라이브러리
    implementation('javax.xml.bind:jaxb-api:2.3.1') // XML 문서와 JAVA 객체 간 매핑을 자동화
    implementation('org.springframework.boot:spring-boot-starter-validation') // validation
    implementation('org.springframework.boot:spring-boot-starter-mail')

    annotationProcessor('org.projectlombok:lombok')

    developmentOnly('org.springframework.boot:spring-boot-devtools') // 변경 내용 자동 재시작 추가

    compileOnly('org.projectlombok:lombok')
    compileOnly('org.springframework.boot:spring-boot-starter-actuator')

    runtimeOnly('com.h2database:h2')
    runtimeOnly('org.mariadb.jdbc:mariadb-java-client')

    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    testCompileOnly('org.projectlombok:lombok')
}

tasks.named('test') {
    useJUnitPlatform()
}
